package com.sec.framework.security.permission;

import java.io.IOException;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.sec.framework.entity.BaseEntity;

public class SecurityServlet extends HttpServlet implements Filter {
	private static final long serialVersionUID = 1L;

	public void doFilter(ServletRequest arg0, ServletResponse arg1, FilterChain arg2) throws IOException, ServletException {
		HttpServletRequest request = (HttpServletRequest) arg0;
		HttpServletResponse response = (HttpServletResponse) arg1;
		HttpSession session = request.getSession(true);
		BaseEntity user = (BaseEntity) session.getAttribute("session_user");// 登录人角色
		String url = request.getRequestURI();
		if (user == null) {
			// 判断获取的路径不为空且不是访问登录页面或执行登录操作时跳转
			if (url != null && !url.equals("") && (url.indexOf("login") < 0)) {
				// response.sendRedirect(request.getContextPath() +
				// "/login.shtml");
				response.getWriter().print("<script>window.top.location='" + getLoginUrl(request) + "';</script>");
				return;
			}
		}
		arg2.doFilter(arg0, arg1);
		return;
	}

	/**
	 * 获取登录页面地址
	 * 
	 * @return
	 */
	private String getLoginUrl(HttpServletRequest request) {
		return request.getRequestURL().toString().split(request.getContextPath())[0] + request.getContextPath() + "/login.shtml";
	}

	public void init(FilterConfig arg0) throws ServletException {
	}
}
